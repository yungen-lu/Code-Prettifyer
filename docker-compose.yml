version: "3.8"

networks:
  web:
    external: true
  internal:
    external: false

services:
  
  traefik:
    build:
      context: "./Dockerfiles/traefik/"
      dockerfile: "Dockerfile"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./Dockerfiles/traefik/traefik.toml:/traefik.toml:ro
      - ./Dockerfiles/traefik/traefik_dynamic.toml:/traefik_dynamic.toml
    environment:
      - NAMECOM_USERNAME=yungen
      - NAMECOM_API_TOKEN=447178b1dfa5b027d6998643296ca2941dc85ac4

    networks: 
      - web
    container_name: traefik
  nginx:
    image: nginx:alpine
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`blog.yungen.studio`,`code.yungen.studio`)
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=lets-encrypt
      # - traefik.http.routers.nginx.tls.domains[0].main=yungen.studio
      # - traefik.http.routers.nginx.tls.domains[0].sans=*.yungen.studio
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.routers.nginx.middlewares=gzip
    networks:
      - internal  #確認跟php在同一個網路裡
      - web
    volumes:
      - ./Dockerfiles/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./Dockerfiles/nginx/nginxconfig.io:/etc/nginx/nginxconfig.io
      - ./Dockerfiles/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./dist:/var/www/code.yungen.studio  #確認路徑與php的一樣
      - ./blog.yungen.studio:/var/www/blog.yungen.studio
      - ./nginxlog/:/var/log/nginx/

    container_name: nginx

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
    # Frontend
      - traefik.http.routers.frontend.rule=Host(`portainer-code.yungen.studio`)
      - traefik.http.services.frontend.loadbalancer.server.port=9000
      - traefik.http.routers.frontend.service=frontend
      - traefik.http.routers.frontend.tls.certresolver=lets-encrypt
    networks:
      - internal
      - web
  php:
    build:
      context: "./Dockerfiles/php/"
      dockerfile: "Dockerfile"
    container_name: php
    networks:
      - internal  #確認跟nginx在同一個網路裡
    volumes:
      - ./dist:/var/www/code.yungen.studio  #確認路徑與nginx的一樣
    labels:
      - traefik.enable=false
  node:
    build:
      context: "./"
      dockerfile: "./Dockerfiles/node/Dockerfile"
    container_name: node-build
    volumes:
      - ./dist:/dist
volumes:
  portainer_data:
